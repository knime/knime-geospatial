<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./leaflet.png" type="Visualizer"
	xmlns="http://knime.org/node/v3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v3.1 http://knime.org/node/v3.1.xsd">

	<name>Leaflet Map View</name>
	<shortDescription>A node which creates a Leaflet view using Javascript.</shortDescription>
	<fullDescription>
		<intro>
			<p>
				This node displays the given GeoJson data as an interactive
				map view.
			</p>
			<p>
				The node supports custom CSS styling. You can simply put CSS rules
				into a single string and set it as a flow variable 'customCSS' in
				the node configuration dialog. You will find the list of available
				classes and their description on our
				<a href="https://knime.com/css-styling">documentation page</a>
			</p>
		</intro>
		<tab name="View Configuration">
			<option name="Center Lat">
				The latitude value of the center of the map that is shown if no points are given or the reset view button is pressed.
			</option>
			<option name="Center Long">
				The longitude value of the center of the map that is shown if no points are given or the reset view button is pressed.
			</option>
			<option name="Zoom Level">
				The zoom level that is used if no points are given or the reset view button is pressed.
			</option>
			<option name="Map Provider">
				Provide a web address to a map provider. Per default open streets map is used.Leaflet provides a list of available provider https://leaflet-extras.github.io/leaflet-providers/preview/ .
			</option>
			<option name="Map Attribution">
				Provide a HTML snippet for the attribution which needs to be added at the bottom to give credits to the used map provider. This element can also be found from the list of providers at https://leaflet-extras.github.io/leaflet-providers/preview/ . 
			</option>

		</tab>
<tab name="Interactivity">
			<option name="Enable view edit">
				If checked all edit controls selected below will
				be rendered in the view. Unchecking this option disables all edit
				controls.
			</option>
			<option name="Enable title/subtitle edit controls">
				Renders a text box to change the chart title and
				subtitle in the view.
			</option>
			<option name="Enable color mode edit">
				If checked, the color gradient can be toggled
				between continuous and discrete from within the view.
			</option>
			<option name="Enable 'show tool tips' option">
				If enabled, tool tips for the heatmap data cells
				and row labels can be toggled on/off from within the view.
			</option>
			<option name="Enable selection">
				When this option is checked, data points can be
				selected in the heatmap by activating the corresponding button and
				clicking on data cells. Extend the selection by holding down the
				Shift-key while clicking on points. The selection appears in an
				appended column of the data table.
			</option>
			<option name="Show reset selection button">
				If checked, a reset selection button will be
				displayed in the view.
			</option>
			<option name="Selection column name">
				Name of the appended column containing boolean
				values to indicate, whether a data cell was selected in the view or
				not.
			</option>
			<option name="Publish selection events">
				If checked, notifies other interactive views when
				user changes the selection in the current view. See also "Subscribe
				to selection events".
			</option>
			<option name="Subscribe to selection events">
				If checked, the view reacts on notifications from
				other interactive views that the selection has been changed. See
				also "Publish selection events".
			</option>
			<option name="Enable 'show selected rows only' option">
				If selected, a "show selected rows only" checkbox
				will be displayed in the view's menu.
			</option>
			<option name="Show selected rows only">
				If enabled, only the selected rows will be
				displayed.
			</option>
		</tab>
	</fullDescription>

	<interactiveView name="Leaflet Map View">
		A Leaflet map view representation of the
		input data table.
	</interactiveView>
	<ports>
		<inPort name="Input table" index="0">
			Input GeoJson data.
		</inPort>
		<outPort name="Image port" index="0">
			An SVG image representation
			of the view.
		</outPort>
	</ports>
</knimeNode>